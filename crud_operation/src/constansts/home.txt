import React, { useEffect, useState } from 'react'
import { getjsonuser } from '../../../constansts/apiUrl';

import { MdDelete } from "react-icons/md";
import { GrUpdate } from "react-icons/gr";
import UpdateModel from '../../../UpdateModel';

import { TiUserAdd } from "react-icons/ti";
import { FaPencil } from "react-icons/fa6";
// import AddModal from './AddModal';

function User() {
  const [data, setData] = useState([]);
  const [error, seterror] = useState([]);
  const [fetchLoading, setfetchLoading] = useState(false);
  const [ismodaldisplay, setIsmodaldisplay] = useState(false);
  const fetchUsers = async () => {
    try {
      const data = await fetch(getjsonuser);
      const data1 = await data.json();
      // console.log("data is:", data1);
      // setData(data1?.users);
      setData(data1)
    } catch (error) {
      if (error) {
        seterror(error.message);
      }
    }
  };
  const deleteUser = async (id) => {
    const confirmed = window.confirm("Are you sure you want to delete this user? id",);
    if (confirmed) {
      console.log("clicked delete")
      const response = await fetch(`${getjsonuser}/${id}`, { method: "delete" });
      const response1 = await response.json();
      console.log("response1:", response1);
      // Proceed with deletion (e.g., fetch or axios call)
      console.log(`User ${id} deleted`);
    } else {
      console.log("Deletion cancelled");
    }

  }
  useEffect(() => {
    fetchUsers();
  }, [])
  let id = 10;
  return (
    <div style={{ display: "flex", flexDirection: "column", alignItems: "center", justifyContent: "center", position: "relative", top: 0 }}>
      <div style={{
        backgroundColor: "gray",
        width: "100%",
        display: "flex",
        alignItems: "center",
        justifyContent: "space-between",
        color: "white",
        position: "sticky",


        top: 0,

        // padding: "20px 180px 20px 200px", // shorthand for top/bottom 20px, left/right 100px
        zIndex: 1000,
        // recommended to ensure sticky stays above other content
      }}>

        <h1 style={{ fontWeight: 700, paddingLeft: "40px" }}>User Crud Operation</h1>
        <TiUserAdd size={32} style={{ paddingRight: "40px" }} onClick={() => { setIsmodaldisplay(true) }} />
      </div>
      {/* <p>{JSON.stringify(data)}</p> */}
      <div style={{ display: "grid", gridTemplateColumns: 'repeat(8, 1fr)', border: '.3px solid #333', padding: "15px", width: "100%", justifyItems: "center" }}>

        <p style={{ fontSize: "18x", fontWeight: "600" }}>ID</p>
        <p style={{ fontSize: "18x", fontWeight: "600" }}>name</p>
        <p style={{ fontSize: "18x", fontWeight: "600" }}>username</p>
        <p style={{ fontSize: "18x", fontWeight: "600" }}>email</p>
        <p style={{ fontSize: "18x", fontWeight: "600" }}>phone</p>
        <p style={{ fontSize: "18x", fontWeight: "600" }}>update</p>
        <p style={{ fontSize: "18x", fontWeight: "600" }}>delete</p>

      </div>

      {data.length > 0 ?
        data.map((item) => (
          <div key={item.id} style={{ border: ".5px solid gray", display: "grid", gridTemplateColumns: 'repeat(8, 1fr)', border: '.3px solid #333', padding: "15px", width: "100%", justifyItems: "center" }}>
            <p >{item?.id}</p>
            <p>{item?.name}</p>
            <p>{item?.username}</p>
            <p>{item?.email}</p>
            <p>{item?.phone}</p>

            {/* <p>{item?.gender}</p> */}
            <FaPencil size={20} onClick={() => { setIsmodaldisplay(true) }} />            {/* <button onClick={()=>deleteUser(item?.id)}>delete</button> */}
            <MdDelete onClick={() => deleteUser(item?.id)} size={30} />

          </div>
        )) : <p>
          no users found
        </p>
      }
      {/* <AddModal ismodaldisplay={ismodaldisplay} setIsmodaldisplay={setIsmodaldisplay} /> */}
      {ismodaldisplay &&

        <UpdateModel id={id} ismodaldisplay={ismodaldisplay} setIsmodaldisplay={setIsmodaldisplay} />
      }

    </div>



  )
}

export default User